
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import BOT_TOKEN, API_ID, API_HASH, ADMIN_ID
from terabox_downloader import get_direct_link

app = Client("terabox_bot", bot_token=BOT_TOKEN, api_id=API_ID, api_hash=API_HASH)

free_users = {}
premium_users = set()

razorpay_link = "https://razorpay.me/@personalbot?amount=rZC5NMufSVtgb9QV3szYxw%3D%3D"

@app.on_message(filters.private & filters.command("start"))
async def start(client, message):
    await message.reply(
        "ЁЯСЛ Welcome / рд╕реНрд╡рд╛рдЧрдд рд╣реИ!

ЁЯУе Send any TeraBox link / рдЯреЗрд░рд╛рдмреЙрдХреНрд╕ рд▓рд┐рдВрдХ рднреЗрдЬреЗрдВ
ЁЯЖУ First 2 downloads are FREE / рдкрд╣рд▓реЗ 2 рдбрд╛рдЙрдирд▓реЛрдб рдлреНрд░реА!
ЁЯФУ Unlock unlimited for тВ╣49 / тВ╣49 рдореЗрдВ рдЕрдирд▓рд┐рдорд┐рдЯреЗрдб рдбрд╛рдЙрдирд▓реЛрдб!",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("ЁЯТ│ Buy Premium тВ╣49", url=razorpay_link)]
        ])
    )

@app.on_message(filters.private & filters.text)
async def handle_message(client, message):
    user_id = message.from_user.id
    text = message.text.strip()

    if str(user_id) in premium_users:
        pass  # Premium user
    else:
        count = free_users.get(user_id, 0)
        if count >= 2:
            await message.reply(
                "ЁЯЪл Free limit over / рдлреНрд░реА рд▓рд┐рдорд┐рдЯ рдЦрддреНрдо

ЁЯТ│ Send тВ╣49 to unlock unlimited / тВ╣49 рднреЗрдЬреЗрдВ рдФрд░ рдЕрдирд▓рд┐рдорд┐рдЯреЗрдб рдбрд╛рдЙрдирд▓реЛрдб рдкрд╛рдПрдВ
ЁЯФЧ Razorpay: " + razorpay_link + "
ЁЯУд Then send payment screenshot.",
            )
            return

    if "terabox.com" in text or "1fichier" in text:
        await message.reply("тП│ Processing your link / рд▓рд┐рдВрдХ рдкреНрд░реЛрд╕реЗрд╕ рд╣реЛ рд░рд╣рд╛ рд╣реИ...")
        link = await get_direct_link(text)
        if link:
            if str(user_id) not in premium_users:
                free_users[user_id] = count + 1
            await message.reply(f"тЬЕ Download Link:

{link}")
        else:
            await message.reply("тЭМ Failed to extract link / рд▓рд┐рдВрдХ рдПрдХреНрд╕рдЯреНрд░реИрдХреНрдЯ рдирд╣реАрдВ рд╣реЛ рд╕рдХрд╛")
    else:
        await message.reply("тЪая╕П Send valid TeraBox link / рдорд╛рдиреНрдп рдЯреЗрд░рд╛рдмреЙрдХреНрд╕ рд▓рд┐рдВрдХ рднреЗрдЬреЗрдВ")

@app.on_message(filters.private & filters.photo)
async def payment_screenshot(client, message):
    user_id = message.from_user.id
    await message.reply("тЬЕ Screenshot received. Awaiting admin approval.

рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рдорд┐рд▓рд╛, рдкреБрд╖реНрдЯрд┐ рдХрд╛ рдЗрдВрддрдЬрд╛рд░ рд╣реИред")

    await client.send_photo(
        ADMIN_ID, message.photo.file_id,
        caption=f"ЁЯз╛ Payment screenshot from user ID: {user_id}",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("тЬЕ Approve", callback_data=f"approve_{user_id}"),
             InlineKeyboardButton("тЭМ Cancel", callback_data=f"cancel_{user_id}")]
        ])
    )

@app.on_callback_query()
async def handle_callback(client, callback_query):
    data = callback_query.data
    if data.startswith("approve_"):
        user_id = int(data.split("_")[1])
        premium_users.add(str(user_id))
        await client.send_message(user_id, "тЬЕ Payment approved! You now have unlimited access.
рднреБрдЧрддрд╛рди рд╕реНрд╡реАрдХреГрдд! рдЕрдм рдЖрдкрдХреЗ рдкрд╛рд╕ рдЕрдирд▓рд┐рдорд┐рдЯреЗрдб рдПрдХреНрд╕реЗрд╕ рд╣реИред")
        await callback_query.message.edit_caption("тЬЕ User approved.")
    elif data.startswith("cancel_"):
        user_id = int(data.split("_")[1])
        await client.send_message(user_id, "тЭМ Payment not approved. Please try again.
рднреБрдЧрддрд╛рди рдЕрд╕реНрд╡реАрдХреГрддред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред")
        await callback_query.message.edit_caption("тЭМ Payment declined.")

app.run()
